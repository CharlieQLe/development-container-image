name: build-image
on:
  workflow_dispatch:

env:
  IMAGE_NAME: development
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  build:
    name: Build and push image
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Generate tags
        id: tags
        shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          alias_tags=()
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            alias_tags+=("pr-${{ github.event.number }}")
          else
            echo "date=$(date +%Y%m%d)" >> $GITHUB_OUTPUT
            alias_tags+=("latest")
          fi
          echo "alias_tags=${alias_tags[*]}" >> $GITHUB_OUTPUT
          
      - id: build
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: |
            ${{ steps.tags.outputs.alias_tags }}
            ${{ steps.tags.outputs.date }}
            ${{ steps.tags.outputs.sha_short }}
          containerfiles: |
            ./Containerfile
            
      # Workaround bug where capital letters in your GitHub user name make it impossible to push to GHCR.
      # https://github.com/macbre/push-to-ghcr/issues/12
      - name: Lowercase Registry
        id: registry_case
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ env.IMAGE_REGISTRY }}

      # Push the image to GHCR (Image Registry)
      - name: Push To GHCR
        uses: redhat-actions/push-to-registry@v2
        id: push
        env:
          REGISTRY_USER: ${{ github.actor }}
          REGISTRY_PASSWORD: ${{ github.token }}
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ${{ steps.registry_case.outputs.lowercase }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
          extra-args: |
            --disable-content-trust
      - name: Echo outputs
        run: |
          echo "${{ toJSON(steps.push.outputs) }}"
